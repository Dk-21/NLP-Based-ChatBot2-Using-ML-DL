Try Programiz PRO Learn Python practically 
                and Get Certified.
Learn Python practically 
                        and Get Certified.
Traversal means visiting all the nodes of a graph.
Breadth First Traversal or Breadth First Search is a recursive algorithm for searching all the vertices of a graph or tree data structure.
A standard BFS implementation puts each vertex of the graph into one of two categories: The purpose of the algorithm is to mark each vertex as visited while avoiding cycles.
The algorithm works as follows: The graph might have two different disconnected parts so to make sure that we cover every vertex, we can also run the BFS algorithm on every node Let's see how the Breadth First Search algorithm works with an example.
We use an undirected graph with 5 vertices.
We start from vertex 0, the BFS algorithm starts by putting it in the Visited list and putting all its adjacent vertices in the stack.
Next, we visit the element at the front of queue i.e.
1 and go to its adjacent nodes.
Since 0 has already been visited, we visit 2 instead.
Vertex 2 has an unvisited adjacent vertex in 4, so we add that to the back of the queue and visit 3, which is at the front of the queue.
Only 4 remains in the queue since the only adjacent node of 3 i.e.
0 is already visited.
We visit it.
Since the queue is empty, we have completed the Breadth First Traversal of the graph.
The code for the Breadth First Search Algorithm with an example is shown below.
The code has been simplified so that we can focus on the algorithm rather than other details.
The time complexity of the BFS algorithm is represented in the form of O(V + E), where V is the number of nodes and E is the number of edges.
The space complexity of the algorithm is O(V).
Sorry about that.
DS & Algorithms Depth First Search (DFS) DS & Algorithms Adjacency List DS & Algorithms Strongly Connected Components DS & Algorithms Ford-Fulkerson Algorithm Â© Parewa Labs Pvt.
Ltd. All rights reserved.