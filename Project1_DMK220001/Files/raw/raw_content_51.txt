Try Programiz PRO Learn Python practically 
                and Get Certified.
Learn Python practically 
                        and Get Certified.
A priority queue is a special type of queue in which each element is associated with a priority value.
And, elements are served on the basis of their priority.
That is, higher priority elements are served first.
However, if elements with the same priority occur, they are served according to their order in the queue.
Assigning Priority Value Generally, the value of the element itself is considered for assigning the priority.
For example, The element with the highest value is considered the highest priority element.
However, in other cases, we can assume the element with the lowest value as the highest priority element.
We can also set priorities according to our needs.
In a queue, the first-in-first-out rule is implemented whereas, in a priority queue, the values are removed on the basis of priority.
The element with the highest priority is removed first.
Priority queue can be implemented using an array, a linked list, a heap data structure, or a binary search tree.
Among these data structures, heap data structure provides an efficient implementation of priority queues.
Hence, we will be using the heap data structure to implement the priority queue in this tutorial.
A max-heap is implemented in the following operations.
If you want to learn more about it, please visit max-heap and min-heap.
A comparative analysis of different implementations of priority queue is given below.
Basic operations of a priority queue are inserting, removing, and peeking elements.
Before studying the priority queue, please refer to the heap data structure for a better understanding of binary heap as it is used to implement the priority queue in this article.
Inserting an element into a priority queue (max-heap) is done by the following steps.
Algorithm for insertion of an element into priority queue (max-heap) For Min Heap, the above algorithm is modified so that parentNode is always smaller than newNode.
Deleting an element from a priority queue (max-heap) is done as follows: Algorithm for deletion of an element in the priority queue (max-heap) For Min Heap, the above algorithm is modified so that the both childNodes are smaller than currentNode.
Peek operation returns the maximum element from Max Heap or minimum element from Min Heap without deleting the node.
For both Max heap and Min Heap Extract-Max returns the node with maximum value after removing it from a Max Heap whereas Extract-Min returns the node with minimum value after removing it from Min Heap.
Some of the applications of a priority queue are: Sorry about that.
DS & Algorithms Heap Data Structure DS & Algorithms Heap Sort Algorithm DS & Algorithms Types of Queues DS & Algorithms Huffman Coding Â© Parewa Labs Pvt.
Ltd. All rights reserved.