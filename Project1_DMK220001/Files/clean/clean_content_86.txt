try programiz pro learn python practically get certified learn python practically get certified bubble sort sorting algorithm compare two adjacent element swap intended order like movement air bubble water rise surface element array move end iteration therefore called bubble sort suppose trying sort element ascending order 1 first iteration compare swap 2 remaining iteration process go remaining iteration iteration largest element among unsorted element placed end iteration comparison take place last unsorted element array sorted unsorted element placed correct position algorithm comparison made even array already sorted increase execution time solve introduce extra variable swapped value swapped set true occurs swapping element otherwise set false iteration swapping value swapped false mean element already sorted need perform iteration reduce execution time help optimize bubble sort algorithm optimized bubble sort bubble sort compare adjacent element hence number comparison nearly equal n2 hence complexity on2 also observe code bubble sort requires two loop hence complexity nn n2 bubble sort used sorry d algorithm selection sort algorithm d algorithm insertion sort algorithm d algorithm shell sort algorithm d algorithm quicksort algorithm Â© parewa lab pvt ltd right reserved