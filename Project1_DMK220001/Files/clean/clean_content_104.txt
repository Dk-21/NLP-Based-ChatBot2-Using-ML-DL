try programiz pro learn c practically get certified learn c practically get certified dynamic programming technique computer programming help efficiently solve class problem overlapping subproblems optimal substructure property problem divided subproblems turn divided smaller subproblems overlapping among subproblems solution subproblems saved future reference way efficiency cpu enhanced method solving solution referred dynamic programming problem involve repeatedly calculating value subproblems find optimum solution let find fibonacci sequence upto 5th term fibonacci series sequence number number sum two preceding one example 011 2 3 number sum two preceding number algorithm calculating fibonacci sequence 5th term hence sequence 011 2 3 used result previous step shown called dynamic programming approach dynamic programming work storing result subproblems solution required hand need recalculate technique storing value subproblems called memoization saving value array save time computation subproblems already come across dynamic programming memoization topdown approach dynamic programming reversing direction algorithm work ie starting base case working towards solution also implement dynamic programming bottomup manner dynamic programming mostly applied recursive algorithm coincidence optimization problem require recursion dynamic programming used optimization problem use recursion use dynamic programming unless presence overlapping subproblems like fibonacci sequence problem recursion reach solution using divide conquer approach reason recursive algorithm like merge sort use dynamic programming subproblems overlapping way greedy algorithm similar dynamic programming sense tool optimization however greedy algorithm look locally optimum solution word greedy choice hope finding global optimum hence greedy algorithm make guess look optimum time becomes costly line guarantee globally optimum dynamic programming hand find optimal solution subproblems make informed choice combine result subproblems find optimum solution sorry d algorithm divide conquer algorithm d algorithm greedy algorithm d algorithm backtracking algorithm d algorithm master theorem Â© parewa lab pvt ltd right reserved